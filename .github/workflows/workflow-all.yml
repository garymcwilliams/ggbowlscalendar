name: GitHub CI
on:
  push:
#on:
#  push:
#    branches:
#      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]
        poetry-version: [1.1.13]
        os: [ubuntu-latest, macos-latest]
#        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: "${{ matrix.python-version }}"
    - uses: actions/cache@v2
      with:
        path: ~/.local
        key: poetry-${{ matrix.poetry-version }}-${{ matrix.os }}-0
    - uses: snok/install-poetry@v1
      with:
        version: ${{ matrix.poetry-version }}
    - name: poetry in motion
      run: |
        poetry install
        poetry run pytest

# Use a separate flow, as we only want to upload one set of codecov results
  codecov:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        poetry-version: [1.1.13]
        os: [ubuntu-latest]
    name: Codecov Workflow
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "${{ matrix.python-version }}"
    - uses: actions/cache@v2
      with:
        path: ~/.local
        key: poetry-${{ matrix.poetry-version }}-${{ matrix.os }}-0
    - name: Install poetry
      uses: snok/install-poetry@v1
      with:
        poetry-version: 1.1.13
    - name: Generate coverage report
#      run: poetry run pytest tests --cov=./ --cov-report=xml
      run: |
        poetry install
        poetry run pytest
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
