name: Python Test
on:
  push:
#on:
#  push:
#    branches:
#      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9]
        poetry-version: [1.1.4]
        os: [ubuntu-18.04, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Get full Python version
      id: full-python-version
      shell: bash
      run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
    - name: Install poetry
      uses: abatilo/actions-poetry@v2.0.0
      with:
        poetry-version: ${{ matrix.poetry-version }}
    - name: poetry in motion
      run: |
        python -m poetry install
        python -m poetry run python -m pytest tests --cov=./ --cov-report=xml

# Use a separate flow, as we only want to upload one set of codecov results
  codecov:
    name: Codecov Workflow
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@master
      with:
        python-version: 3.9
    - name: Install poetry
      uses: abatilo/actions-poetry@v2.0.0
      with:
        poetry-version: 1.1.4
    - name: Generate coverage report
      run: |
        poetry install
        poetry run pytest tests --cov=./ --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
