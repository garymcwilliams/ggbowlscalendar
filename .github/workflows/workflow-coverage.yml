name: CodeCov Code Coverage
on:
  push:
#on:
#  push:
#    branches:
#      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  codecov:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        poetry-version: [1.4.2]
        os: [ubuntu-latest]
    name: Codecov Workflow
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "${{ matrix.python-version }}"
    - name: Cache Poetry
      uses: actions/cache@v3
      with:
        path: ~/.local
        key: poetry-${{ matrix.poetry-version }}-${{ matrix.os }}-${{ matrix.python-version }}-v0
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: ${{ matrix.poetry-version }}
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Cache deps
      id: cache-deps
      uses: actions/cache@v2
      with:
        path: .venv
        key: pydeps-${{ hashFiles('**/poetry.lock') }}
    - name: Install Poetry dependencies
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    - name: Install project dependencies
      run: poetry install --no-interaction
    - name: poetry in motion tests
      run: |
        poetry run coverage run -m pytest
        ls -alrt
        poetry run pytest --cov 
        ls -alrt
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage
        flags: unittests
